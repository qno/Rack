# https://docs.microsoft.com/de-de/azure/devops/pipelines/agents/hosted?view=azure-devops#software
trigger:
- master

variables:
  python-version: "3.7"
  conan-pkg: "conan"
  cpt-pkg:  "conan_package_tools"
  bpt-pkg: "bincrafters_package_tools"
  linux-deps: "python3-setuptools python3-pip build-essential automake autoconf libtool cmake gcc g++ clang ninja-build git"

  # Xcode Version overview: https://gist.github.com/yamaya/2924292
  # available versions: https://github.com/Microsoft/azure-pipelines-image-generation/blob/master/images/macos/macos-10.14-Readme.md
  XCODE_VERSION: 10.2

# https://docs.microsoft.com/en-us/azure/devops/pipelines/process/container-phases?view=azure-devops&tabs=yaml
jobs:
  # maybe also try CentOS and Arch builds?
  - job: LinuxGCC
    pool:
      vmImage: 'ubuntu-16.04'
    container:
      image: ubuntu:disco
      options: "--name ci-container -v /usr/bin/docker:/tmp/docker:ro"
    steps:
      - script: |
          /tmp/docker exec -t -u 0 ci-container \
          sh -c "apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confold" -y install sudo"
        displayName: add sudo to container #https://github.com/Microsoft/azure-pipelines-agent/issues/2043
      - script: |
          export PATH="$PATH:$HOME/.local/bin"
          sudo apt install -y $(linux-deps)
          pip3 install --user $(conan-pkg)
          pip3 install --user $(cpt-pkg) $(bpt-pkg)
          conan user
          conan remote add conan-community https://api.bintray.com/conan/conan-community/conan
          conan remote add qno https://api.bintray.com/conan/qno/conan-public
          conan remote add bincrafters https://api.bintray.com/conan/bincrafters/public-conan
        displayName: setup dependencies
      - script: |
          export PATH="$PATH:$HOME/.local/bin"
          pushd .
          mkdir build && cd build
          conan install .. -s compiler.libcxx=libstdc++11 -s build_type=Release --build=missing
          cmake -DCMAKE_BUILD_TYPE=Release -G Ninja ..
          ninja -v
        displayName: build VCVRack
  - job: LinuxClang
    pool:
      vmImage: 'ubuntu-16.04'
    container:
      image: ubuntu:disco
      options: "--name ci-container -v /usr/bin/docker:/tmp/docker:ro"
    steps:
      - script: |
          /tmp/docker exec -t -u 0 ci-container \
          sh -c "apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confold" -y install sudo"
        displayName: add sudo to container #https://github.com/Microsoft/azure-pipelines-agent/issues/2043
      - script: |
          export PATH="$PATH:$HOME/.local/bin"
          sudo apt install -y $(linux-deps)
          pip3 install --user $(conan-pkg)
          pip3 install --user $(cpt-pkg) $(bpt-pkg)
          conan user
          conan remote add conan-community https://api.bintray.com/conan/conan-community/conan
          conan remote add qno https://api.bintray.com/conan/qno/conan-public
          conan remote add bincrafters https://api.bintray.com/conan/bincrafters/public-conan
        displayName: setup dependencies
      - script: |
          export PATH="$PATH:$HOME/.local/bin"
          export CC=clang
          export CXX=clang++
          pushd .
          mkdir build && cd build
          conan install .. -s build_type=Release --profile ../.ci/conan_profile_linux_clang8 --build=missing
          cmake -DCMAKE_BUILD_TYPE=Release -G Ninja ..
          ninja -v
        displayName: build VCVRack
  - job: MacOS1014
    pool:
      vmImage: macOS-10.14
    steps:
      - task: UsePythonVersion@0
        inputs:
         versionSpec: $(python-version)
      - script: |
          /bin/bash -c "sudo xcode-select -s /Applications/Xcode_$(XCODE_VERSION).app/Contents/Developer"
          export PATH="$HOME/.local/bin:$PATH"
          pip install --upgrade pip
          brew update || brew update
          brew install autoconf automake libtool pkg-config
          brew install cmake || true
          pip install --upgrade $(conan-pkg)
          pip install $(cpt-pkg) $(bpt-pkg)
          conan user
          conan remote add conan-community https://api.bintray.com/conan/conan-community/conan
          conan remote add qno https://api.bintray.com/conan/qno/conan-public
          conan remote add bincrafters https://api.bintray.com/conan/bincrafters/public-conan
          pushd .
          mkdir build && cd build
          conan install .. -s build_type=Release --build=missing
          cmake -DCMAKE_BUILD_TYPE=Release ..
          VERBOSE=1 make -j
        displayName: build VCVRack
  - job: MinGW
    pool:
      vmImage: vs2017-win2016
    steps:
      - task: UsePythonVersion@0
        inputs:
         versionSpec: $(python-version)
      - script: |
          python -m pip install --upgrade pip
          python -m pip install $(conan-pkg)
          python -m pip install $(cpt-pkg) $(bpt-pkg)
          conan user
          conan remote add conan-community https://api.bintray.com/conan/conan-community/conan
          conan remote add qno https://api.bintray.com/conan/qno/conan-public
          conan remote add bincrafters https://api.bintray.com/conan/bincrafters/public-conan
          mkdir build
          cd build
          # conan install .. -s build_type=Release --profile ../.ci/conan_profile_mingw_gcc8 --build=missing
          # build in CI with gcc 7 and libc++ as conan MinGW doesn't build variants with libstdc++11 for now
          # and no gcc 8 build are available, see also - https://github.com/conan-io/conan-package-tools/issues/375
          conan install .. -s build_type=Release --profile ../.ci/conan_profile_mingw_gcc8 -s compiler.version=7 -s compiler.libcxx=libstdc++ --build=missing
          # because activate_run.bat doesn't work here the ENV is setup directly like the script does
          SET LD_LIBRARY_PATH=C:\Users\VssAdministrator\.conan\data\mingw_installer\1.0\conan\stable\package\d6e9d8771a7904278203ca1b715b751651fb5664\lib;C:\Users\VssAdministrator\.conan\data\OSDialog\latest\qno\testing\package\6dc82da13f94df549e60f9c1ce4c5d11285a4dff\lib;C:\Users\VssAdministrator\.conan\data\SpeexDSP\1.2rc3\qno\testing\package\556eee825ad14a52f29364abfab0a4ad92873165\lib;C:\Users\VssAdministrator\.conan\data\RtAudio\5.1.0\qno\testing\package\11d7d075fb6600afef9ba14ccee0e260c25f1ab7\lib;C:\Users\VssAdministrator\.conan\data\RtMidi\4.0.0\qno\testing\package\11d7d075fb6600afef9ba14ccee0e260c25f1ab7\lib;C:\Users\VssAdministrator\.conan\data\Pffft\latest\qno\testing\package\6dc82da13f94df549e60f9c1ce4c5d11285a4dff\lib;C:\Users\VssAdministrator\.conan\data\jansson\2.12\bincrafters\stable\package\94c21695bf68b1699dcbed632d9090ad14a4803e\lib;C:\Users\VssAdministrator\.conan\data\libcurl\7.61.1\bincrafters\stable\package\6a89b33b6b13c3afe7b530a8a05618b93be31683\lib;C:\Users\VssAdministrator\.conan\data\libzip\1.5.1\bincrafters\stable\package\f1a3b3f264602f3012a0aa3ec2b881779da88982\lib;C:\Users\VssAdministrator\.conan\data\NanoVG\latest\qno\testing\package\89d652a34c83ae3ae8324ecfddea2f4753d61d2e\lib;C:\Users\VssAdministrator\.conan\data\OpenSSL\1.0.2r\conan\stable\package\f761d91cef7988eafb88c6b6179f4cf261609f26\lib;C:\Users\VssAdministrator\.conan\data\bzip2\1.0.6\conan\stable\package\402bf05ba0cb88a78c59efe7e90ebf2d341edad2\lib;C:\Users\VssAdministrator\.conan\data\glew\2.1.0\bincrafters\stable\package\6dc82da13f94df549e60f9c1ce4c5d11285a4dff\lib;C:\Users\VssAdministrator\.conan\data\glfw\3.3\qno\testing\package\6dc82da13f94df549e60f9c1ce4c5d11285a4dff\lib;C:\Users\VssAdministrator\.conan\data\zlib\1.2.11\conan\stable\package\6dc82da13f94df549e60f9c1ce4c5d11285a4dff\lib;%LD_LIBRARY_PATH%
          SET PATH=C:\Users\VssAdministrator\.conan\data\mingw_installer\1.0\conan\stable\package\d6e9d8771a7904278203ca1b715b751651fb5664\bin;C:\Users\VssAdministrator\.conan\data\libcurl\7.61.1\bincrafters\stable\package\6a89b33b6b13c3afe7b530a8a05618b93be31683\bin;C:\Users\VssAdministrator\.conan\data\libzip\1.5.1\bincrafters\stable\package\f1a3b3f264602f3012a0aa3ec2b881779da88982\bin;C:\Users\VssAdministrator\.conan\data\bzip2\1.0.6\conan\stable\package\402bf05ba0cb88a78c59efe7e90ebf2d341edad2\bin;%PATH%
          set
          cmake -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release ..
          cmake --build .
        displayName: build VCVRack
#  - job: VisualStudio
#    pool:
#      vmImage: vs2017-win2016
#    steps:
#      - task: UsePythonVersion@0
#        inputs:
#         versionSpec: $(python-version)
#      - script: |
#          python -m pip install --upgrade pip
#          python -m pip install $(conan-pkg)
#          python -m pip install $(cpt-pkg) $(bpt-pkg)
#          conan user
#          conan remote add conan-community https://api.bintray.com/conan/conan-community/conan
#          conan remote add qno https://api.bintray.com/conan/qno/conan-public
#          conan remote add bincrafters https://api.bintray.com/conan/bincrafters/public-conan
#          mkdir build
#          cd build
#          conan install .. -s build_type=Release
#          cmake -G "Visual Studio 15 Win64" -DCMAKE_BUILD_TYPE=Release ..
#          cmake --build .
#        displayName: build VCVRack
